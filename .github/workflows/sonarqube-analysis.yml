name: SonarQube Analysis

on:
  pull_request:
    branches: [ main, develop ]
  push:
    branches: [ main, develop ]

env:
  GRADLE_OPTS: -Dorg.gradle.daemon=false

jobs:
  sonarqube:
    name: SonarQube Analysis
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Full history for SonarQube analysis
        
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: gradle
        
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
      
    - name: Cache Gradle packages
      uses: actions/cache@v3
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
          
    - name: Build and Test
      run: |
        ./gradlew clean build testDebugUnitTest --console=plain
        
    - name: Generate Code Coverage
      run: ./gradlew jacocoTestReport --console=plain
        
    - name: Run Detekt Analysis
      run: ./gradlew detekt --console=plain
        
    - name: Run Lint Analysis
      run: ./gradlew lintDebug --console=plain
        
    - name: SonarQube Analysis
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        # Download SonarQube Scanner
        wget -q https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-4.8.0.2856-linux.zip
        unzip -q sonar-scanner-cli-4.8.0.2856-linux.zip
        
        # Set environment variables for SonarQube
        export SONAR_SCANNER_HOME=sonar-scanner-4.8.0.2856-linux
        export PATH=$PATH:$SONAR_SCANNER_HOME/bin
        
        # Determine if this is a pull request or push
        if [ "${{ github.event_name }}" = "pull_request" ]; then
          # Pull request analysis
          sonar-scanner \
            -Dsonar.projectKey=smart-daily-expense-tracker \
            -Dsonar.sources=app/src/main/java \
            -Dsonar.tests=app/src/test/java \
            -Dsonar.java.binaries=app/build/intermediates/javac \
            -Dsonar.java.test.binaries=app/build/intermediates/javac \
            -Dsonar.coverage.jacoco.xmlReportPaths=app/build/reports/jacoco/jacocoTestReport/jacocoTestReport.xml \
            -Dsonar.kotlin.detekt.reportPaths=app/build/reports/detekt/detekt.xml \
            -Dsonar.android.lint.reportPaths=app/build/reports/lint-results.xml \
            -Dsonar.host.url=$SONAR_HOST_URL \
            -Dsonar.login=$SONAR_TOKEN \
            -Dsonar.pullrequest.key=${{ github.event.number }} \
            -Dsonar.pullrequest.branch=${{ github.head_ref }} \
            -Dsonar.pullrequest.base=${{ github.base_ref }} \
            -Dsonar.pullrequest.github.repository=${{ github.repository }} \
            -Dsonar.qualitygate.wait=true \
            -Dsonar.qualitygate.timeout=300
        else
          # Branch analysis
          sonar-scanner \
            -Dsonar.projectKey=smart-daily-expense-tracker \
            -Dsonar.sources=app/src/main/java \
            -Dsonar.tests=app/src/test/java \
            -Dsonar.java.binaries=app/build/intermediates/javac \
            -Dsonar.java.test.binaries=app/build/intermediates/javac \
            -Dsonar.coverage.jacoco.xmlReportPaths=app/build/reports/jacoco/jacocoTestReport/jacocoTestReport.xml \
            -Dsonar.kotlin.detekt.reportPaths=app/build/reports/detekt/detekt.xml \
            -Dsonar.android.lint.reportPaths=app/build/reports/lint-results.xml \
            -Dsonar.host.url=$SONAR_HOST_URL \
            -Dsonar.login=$SONAR_TOKEN \
            -Dsonar.branch.name=${{ github.ref_name }} \
            -Dsonar.branch.target=${{ github.base_ref }} \
            -Dsonar.qualitygate.wait=true \
            -Dsonar.qualitygate.timeout=300
        fi
        
    - name: Upload SonarQube Reports
      uses: actions/upload-artifact@v3
      with:
        name: sonarqube-reports
        path: |
          app/build/reports/jacoco/
          app/build/reports/detekt/
          app/build/reports/lint/
          
    - name: Comment PR with SonarQube Results
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v6
      with:
        script: |
          const { data: analysis } = await github.rest.codeScanning.listAlertInstances({
            owner: context.repo.owner,
            repo: context.repo.repo,
            ref: context.payload.pull_request.head.sha,
          });
          
          if (analysis.length > 0) {
            const comment = `## 🔍 SonarQube Analysis Results
            
            **Issues Found:** ${analysis.length}
            
            ### Quality Gate Status: ${analysis.some(alert => alert.state === 'open') ? '❌ Failed' : '✅ Passed'}
            
            **View Full Report:** [SonarQube Dashboard](${process.env.SONAR_HOST_URL}/dashboard?id=smart-daily-expense-tracker&pullRequest=${context.payload.pull_request.number})
            
            **Next Steps:**
            - Review and fix any critical issues
            - Ensure code coverage meets requirements
            - Address security vulnerabilities
            - Fix code smells and maintainability issues`;
            
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.payload.pull_request.number,
              body: comment
            });
          } else {
            const comment = `## 🔍 SonarQube Analysis Results
            
            **Quality Gate Status:** ✅ Passed
            
            **View Full Report:** [SonarQube Dashboard](${process.env.SONAR_HOST_URL}/dashboard?id=smart-daily-expense-tracker&pullRequest=${context.payload.pull_request.number})
            
            🎉 All quality checks passed!`;
            
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.payload.pull_request.number,
              body: comment
            });
          }
      env:
        SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
